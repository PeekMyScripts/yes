--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.1.6) ~  Much Love, Ferib 

]]--

do local v0=0;local v1;local v2;local v3;local v4;local v5;local v6;local v7;local v8;local v9;local v10;local v11;local v12;local v13;local v14;local v15;while true do if (v0==0) then v1=tonumber;v2=string.byte;v3=string.char;v4=string.sub;v0=1;end if (v0==1) then v5=string.gsub;v6=string.rep;v7=table.concat;v8=table.insert;v0=2;end if (v0==3) then v13=unpack or table.unpack;v14=tonumber;v15=nil;function v15(v16,v17)local v18=1;local v19;v16=v5(v4(v16,5),"..",function(v30)if (v2(v30,2)==79) then local v64=0;while true do if (v64==0) then v19=v1(v4(v30,1,1));return "";end end else local v65=0;local v66;while true do if (v65==0) then v66=v3(v1(v30,16));if v19 then local v82=v6(v66,v19);v19=nil;return v82;else return v66;end break;end end end end);local function v20(v31,v32,v33)if v33 then local v67=1554 -(1474 + 80);local v68;while true do if (v67==(0 + 0)) then v68=(v31/(2^(v32-(1 + 0))))%((6 -4)^(((v33-(2 -1)) -(v32-(1 + 0))) + (1371 -(511 + 859))));return v68-(v68%(2 -1));end end else local v69=(1617 -((2234 -(544 + 82)) + 7))^(v32-(957 -(805 + 151)));return (((v31%(v69 + v69))>=v69) and (1 + 0)) or (965 -(29 + 936));end end local function v21()local v38=v2(v16,v18,v18);v18=v18 + 1;return v38;end local function v22()local v39,v40=v2(v16,v18,v18 + 2);v18=v18 + 2 + 0;return (v40 * (1782 -(641 + 885))) + v39;end local function v23()local v41=0 + (0 -0);local v42;local v43;local v44;local v45;while true do if ((0 + 0)==v41) then v42,v43,v44,v45=v2(v16,v18,v18 + 3);v18=v18 + ((2786 -1817) -(137 + 828));v41=1;end if (v41==(1 + 0)) then return (v45 * (21811399 -5034183)) + (v44 * 65536) + (v43 * (395 -(4 + 135))) + v42;end end end local function v24()local v46=518 -(179 + 339);local v47;local v48;while true do if (v46==(751 -(508 + (702 -459)))) then v47=v23();v48=v23();v46=888 -(691 + 196);end if (v46==(1 + 0)) then return (( -((67 -(34 + 31)) + 0) * v20(v48,1980 -(1055 + 893))) + (2 -(1 -0))) * ((2 + 0)^(v20(v48,34 -13,62 -31) -((1634 + 1518) -2129))) * ((((v20(v48,1,881 -(123 + 738)) * ((1937 -(1819 + 116))^(127 -95))) + v47)/(2^52)) + (3 -(762 -(245 + 515))));end end end local function v25(v34)local v49;if  not v34 then v34=v23();if (v34==0) then return "";end end v49=v4(v16,v18,(v18 + v34) -(2 -1));v18=v18 + v34;local v50={};for v61=2 -1, #v49 do v50[v61]=v3(v2(v4(v49,v61,v61)));end return v7(v50);end local v26=v23;local function v27(...)return {...},v12("#",...);end local function v28()local v51=0 -0;local v52;local v53;local v54;local v55;local v56;local v57;while true do local v63=0 + 0;while true do if ((0 + 0)==v63) then if ((2 -0)~=v51) then else local v76=0;while true do if (v76==(0 + 0)) then for v99=1,v56 do local v100=391 -(272 + 119);local v101;local v102;local v103;local v104;local v105;while true do if (v100==(1 + 1)) then v105=nil;while true do if (v101==(1 + 1)) then while true do if (v102==(4 -3)) then v105=nil;while true do if (v103~=(1 -0)) then else if (v104==(1 -0)) then v105=v21()~=0;elseif (v104==(946 -(274 + 670))) then v105=v24();elseif (v104~=3) then else v105=v25();end v57[v99]=v105;break;end if (v103==(1885 -(1094 + 791))) then local v148=56 -(6 + 50);local v149;while true do if (v148~=(0 + 0)) then else v149=0 -0;while true do if (v149~=(2 -1)) then else v103=1 + 0;break;end if ((0 + 0)==v149) then local v261=0;while true do if (v261==(870 -(335 + 534))) then v149=1;break;end if (v261==0) then v104=v21();v105=nil;v261=1 -0;end end end end break;end end end end break;end if (v102==(1771 -(1325 + 446))) then local v121=739 -(322 + 417);local v122;while true do if (v121~=(0 + 0)) then else v122=0;while true do if (0~=v122) then else v103=0;v104=nil;v122=1 -0;end if (v122==1) then v102=517 -(18 + 498);break;end end break;end end end end break;end if (v101==(0 -0)) then v102=0 -0;v103=nil;v101=1 + 0;end if (v101~=1) then else local v119=0 -0;while true do if (v119==0) then v104=nil;v105=nil;v119=1;end if (v119~=(1 -0)) then else v101=1 + 1;break;end end end end break;end if (v100==(3 -2)) then v103=nil;v104=nil;v100=1 + 1;end if (v100~=(988 -(213 + 775))) then else v101=0;v102=nil;v100=1;end end end v55[3 + 0]=v21();v76=1 + 0;end if (v76~=(1 + 0)) then else for v106=209 -(64 + 144),v23() do local v107=0;local v108;local v109;local v110;while true do if (v107~=(0 + 0)) then else v108=0;v109=nil;v107=1109 -(216 + 892);end if (v107~=(282 -(83 + 198))) then else v110=nil;while true do if ((2 -1)==v108) then while true do if ((1394 -(1035 + 359))~=v109) then else v110=v21();if (v20(v110,791 -(236 + 554),1)~=(0 + 0)) then else local v123=0;local v124;local v125;local v126;local v127;while true do if (v123==1) then v126=nil;v127=nil;v123=1483 -(1183 + 298);end if (v123==0) then v124=0 -0;v125=nil;v123=1308 -(534 + 773);end if (v123~=(1267 -(196 + 1069))) then else while true do if (v124~=(1 -0)) then else local v249=0 + 0;while true do if (v249~=1) then else v124=270 -(17 + 251);break;end if (v249==0) then v127={v22(),v22(),nil,nil};if (v125==(0 + 0)) then local v290=0 -0;local v291;local v292;local v293;while true do if (v290==(1509 -(1297 + 211))) then v293=nil;while true do if (v291~=(531 -(454 + 76))) then else while true do if (v292==(1041 -(563 + 478))) then v293=0;while true do if (v293~=(0 + 0)) then else v127[3]=v22();v127[1 + 3]=v22();break;end end break;end end break;end if (v291==(0 -0)) then local v319=0 -0;while true do if ((0 + 0)==v319) then v292=0 + 0;v293=nil;v319=2 -1;end if (v319==(2 -1)) then v291=1 -0;break;end end end end break;end if (v290~=(0 -0)) then else v291=0 -0;v292=nil;v290=1 + 0;end end elseif (v125==(1 -0)) then v127[3 + 0]=v23();elseif (v125==2) then v127[9 -6]=v23() -((1472 -(1092 + 378))^(13 + 3));elseif (v125~=(828 -(729 + 96))) then else local v320=0 + 0;local v321;local v322;while true do if (v320==(997 -(527 + 470))) then v321=73 -(69 + 4);v322=nil;v320=1;end if (v320==(1 + 0)) then while true do if (v321==0) then v322=0;while true do if (v322~=0) then else v127[3 -0]=v23() -((4 -2)^(48 -32));v127[4 + 0]=v22();break;end end break;end end break;end end end v249=1 + 0;end end end if (v124~=2) then else local v250=0 -0;while true do if (v250==(2 -1)) then v124=3;break;end if (v250==(602 -(47 + 555))) then if (v20(v126,2 -1,1 + 0)==(1 + 0)) then v127[2]=v57[v127[2]];end if (v20(v126,5 -3,2)~=(220 -(42 + 177))) then else v127[3]=v57[v127[1 + 2]];end v250=870 -(646 + 223);end end end if ((1 + 2)~=v124) then else if (v20(v126,1897 -(1198 + 696),3 + 0)==(330 -(215 + 114))) then v127[7 -3]=v57[v127[4 + 0]];end v52[v106]=v127;break;end if (v124~=(947 -(734 + 213))) then else local v252=0;while true do if (v252~=(0 -0)) then else v125=v20(v110,1645 -(1114 + 529),9 -6);v126=v20(v110,1 + 3,1513 -(863 + 644));v252=1 -0;end if (v252==(1 -0)) then v124=246 -(207 + 38);break;end end end end break;end end end break;end end break;end if (v108==(0 -0)) then local v120=284 -(218 + 66);while true do if (v120==(1916 -(1037 + 878))) then v108=1814 -(366 + 1447);break;end if (v120==0) then v109=0 + 0;v110=nil;v120=1;end end end end break;end end end v51=460 -(89 + 368);break;end end end if (0==v51) then local v77=0;local v78;while true do if (v77==(1813 -(1643 + 170))) then v78=0 -0;while true do if (v78==(0 -0)) then local v114=0 + 0;while true do if (v114==(3 -2)) then v78=1 + 0;break;end if (v114==(218 -(108 + 110))) then v52={};v53={};v114=1 + 0;end end end if (v78~=1) then else v54={};v51=1;break;end end break;end end end v63=1 + 0;end if (v63==(1 + 0)) then if (3==v51) then local v79=266 -(52 + 214);local v80;while true do if (v79~=0) then else v80=0 + 0;while true do if (v80~=(764 -(685 + 79))) then else for v115=850 -(783 + 66),v23() do v53[v115-(1 + 0)]=v28();end for v117=1,v23() do v54[v117]=v23();end v80=2 -1;end if (v80==(1 + 0)) then return v55;end end break;end end end if ((1929 -(220 + 1708))==v51) then local v81=0 + 0;while true do if (0~=v81) then else local v98=725 -(676 + 49);while true do if (v98==(1916 -(786 + 1130))) then v55={v52,v53,nil,v54};v56=v23();v98=1 -0;end if (v98==(1 -0)) then v81=1;break;end end end if (v81==(1956 -(1643 + 312))) then v57={};v51=9 -7;break;end end end break;end end end end local function v29(v35,v36,v37)local v58=v35[1];local v59=v35[2];local v60=v35[3];return function(...)local v70=0;local v71;local v72;local v73;local v74;local v75;while true do if (v70==0) then v71=1;v72= -1;v70=1;end if (v70==3) then A,B=v27(v11(v75));if  not A[1] then local v83=v35[4][v71] or "?";error("Script error at ["   .. v83   .. "]:"   .. A[2]);else return v13(A,2,B);end break;end if (v70==1) then v73={...};v74=v12("#",...) -1;v70=2;end if (v70==2) then v75=nil;function v75()local v84=v58;local v85=Const;local v86=v59;local v87=v60;local v88=v27;local v89={};local v90={};local v91={};for v95=202 -(30 + 172),v74 do if (((540 + 619)>(257 + (375 -198))) and (v95>=v87)) then v89[v95-v87]=v73[v95 + 1];else v91[v95]=v73[v95 + (1 -0)];end end local v92=(v74-v87) + ((2 -1) -0);local v93;local v94;while true do local v96=0;while true do if ((v96==(0 + 0)) or ((1971 -(1048 + 537))>=4972)) then local v113=0 + 0;while true do if ((v113==(1 + 0)) or ((160 + 616)>=(2678 -(1466 + 16)))) then v96=2 -1;break;end if (((3392 -(1009 + 245))>(49 + 837)) and (v113==(645 -(468 + 177)))) then v93=v84[v71];v94=v93[1 + 0];v113=2 -1;end end end if ((v96==(1 -0)) or (4649>=4900)) then if ((v94<=(88 -(26 + 38))) or ((12709 -8951)>=4844)) then if ((v94<=11) or ((409 -(189 + 177))>=744)) then if (((3302 -(184 + 448))==(2731 -(14 + 47))) and (v94<=(776 -(738 + 33)))) then if ((v94<=(9 -7)) or ((1034 + 121)>=(3434 -(21 + 95)))) then if ((v94<=(825 -(682 + 143))) or (1868<=(247 + 187 + (1255 -(125 + 795))))) then local v128=(172 -(37 + 135)) + 0;local v129;while true do if (((1115 -(27 + 998))<3046) and (v128==((0 -0) + 0))) then v129=v93[2];v91[v129](v91[v129 + (3 -2)]);break;end end elseif ((v94==(1678 -(451 + 1226))) or ((2487 + 729)<=((2956 -(29 + 82)) -(109 + 18 + 1347)))) then local v150=0 + 0 + 0;local v151;local v152;local v153;local v154;local v155;local v156;while true do if (((2441 -(123 + 12 + 83))<=4360) and (v150==(4 -(199 -(115 + 82))))) then v155=nil;v156=nil;v150=10 -7;end if ((3451<=(9950 -(5973 -(97 + 97)))) and (((15 -5) -7)==v150)) then while true do if ((v151==(3 -1)) or (1909>(3099 -(500 + 439)))) then v156=nil;while true do if ((v152==(51 -(14 + 35))) or ((4493 -(584 + 244))>=(9861 -(26298 -20569)))) then for v302=v153,v72 do local v303=0 -0;local v304;while true do if (((302 -(52 + (331 -81)))==v303) or (3673<(2528 -(72 + 281)))) then v304=1828 -(1516 + 312);while true do if ((v304==(1106 -(269 + 837))) or ((829 + 74)<=103)) then v156=v156 + 1;v91[v302]=v154[v156];break;end end break;end end end break;end if (((3586 -(63 + 128))>=(4068 -2639)) and (v152==(1 + 0))) then local v296=1116 -(704 + 412);while true do if ((3656>=(552 + 332)) and (v296==(0 -0))) then local v313=230 -(33 + 197);while true do if (((1705 + 2604)>=(1543 -1145)) and (v313==(0 -0))) then v72=(v155 + v153) -1;v156=0 + 0;v313=1 + 0 + 0;end if ((((11427 -8742) -(791 + 255))<(7059 -(15584 -11327))) and (((1925 -(8 + 457)) -(851 + 608))==v313)) then v296=1 + 0;break;end end end if (((752 -(665 + 86))==v296) or (((8955 -4367) -(1004 + 328))>=(12253 -7428))) then v152=2;break;end end end if ((742<(17099 -12112)) and (v152==(0 -0))) then local v297=0 + 0 + 0;while true do if (((2 -(1 -0))==v297) or (4240==(4221 -(1569 + 116)))) then v152=1 + 0;break;end if ((v297==(219 -(201 + 18))) or ((1561 + 1375)<(642 + 496))) then local v314=0 -0;while true do if ((v314==1) or (((758 -363) + 0)>=(1174 + 3045))) then v297=1;break;end if ((v314==(0 + 0)) or (3395>=((15484 -11709) -(25 + 19)))) then v153=v93[2];v154,v155=v88(v91[v153](v91[v153 + 1]));v314=1;end end end end end end break;end if (((4223 -(34 + 307))==3882) and (v151==(1283 -(606 + 119 + 558)))) then v152=0;v153=nil;v151=1;end if ((v151==(3 -2)) or (((8505 -5463) -(267 + 137))<=(273 + 2305))) then local v264=295 -(105 + 190);while true do if ((v264==(0 -0)) or ((3820 -(839 + 660))>=(16864 -12642))) then v154=nil;v155=nil;v264=1043 -((2491 -(1404 + 167)) + 122);end if (((1724 -1203)<(3782 -898)) and (v264==1)) then v151=2 + 0;break;end end end end break;end if ((v150==(2 -1)) or (((341 -(48 + 106)) + 441)<210)) then v153=nil;v154=nil;v150=201 -(64 + 135);end if (((3653 -(1521 + 165))>=807) and (v150==(0 + 0))) then v151=0;v152=nil;v150=959 -(473 + 485);end end else v91[v93[2 + 0]]=v91[v93[529 -(513 + 13)]]/v93[1 + 3];end elseif (((1690 + 1436)<=(13455 -(27043 -17665))) and (v94<=(1 + 2))) then v91[v93[2 + (0 -0)]][v93[3]]=v91[v93[(5 + 5) -6]];elseif ((v94>(9 -5)) or ((2846 -1547)==(6140 -2222))) then local v158=775 -(562 + 213);local v159;local v160;local v161;while true do if ((1==v158) or ((2784 -(170 + 481))==(4433 -1357))) then v161=nil;while true do if ((v159==(0 -0)) or (((5124 -(227 + 931)) -(571 + 318))>((16640 -12442) -(571 + 379)))) then v160=0 + 0;v161=nil;v159=1 + 0;end if ((v159==(1 -0)) or (((708 -(108 + 162)) + 3215)==(4803 + (203 -115)))) then while true do if (((5695 -(1086 + 96))==(6530 -2017)) and ((0 -(0 + 0))==v160)) then v161=v93[58 -(50 + 6)];v91[v161](v13(v91,v161 + (3 -2),v93[985 -(670 + 312)]));break;end end break;end end break;end if ((4606>=2544) and (v158==(0 + 0))) then v159=0 + 0 + 0;v160=nil;v158=1;end end elseif ((92<1142) and (v93[6 -(2 + 2)]<v91[v93[2 + 2]])) then v71=v71 + 1;else v71=v93[8 -(8 -3)];end elseif ((3235==(3510 -(86 + 189))) and (v94<=(700 -(472 + 220)))) then if (((8453 -(6327 -(667 + 451)))>=(3271 -(1029 + 246))) and (v94<=6)) then v91[v93[1946 -(706 + 1238)]]=v91[v93[3]][v91[v93[(1 + 4) -1]]];elseif ((v94==(46 -(27 + 12))) or (525>(501 + 3195))) then local v162=0;local v163;local v164;local v165;while true do if ((v162==1) or ((5688 -(381 + 1297))>4185)) then v165=nil;while true do if ((2968>(2285 -818)) and (v163==(2 -1))) then for v277=v164 + (2 -1),v93[4] do v165=v165   .. v91[v277];end v91[v93[(1774 -(419 + 1348)) -5]]=v165;break;end if ((v163==(0 + (767 -(530 + 237)))) or ((293 -124)>=(727 + 473))) then local v266=1750 -(979 + 771);local v267;while true do if ((v266==(0 + 0)) or (3173>=(11544 -7471))) then v267=0;while true do if ((v267==1) or (1434<=(1193 -((3469 -2473) + 84)))) then v163=909 -(451 + 457);break;end if ((v267==(0 -0)) or ((908 + 907)<(273 + 290))) then v164=v93[3];v165=v91[v164];v267=2 -1;end end break;end end end end break;end if ((v162==(0 -(325 -(266 + 59)))) or ((2579 -(243 + 714))>=(2234 + 1461))) then local v238=132 -(34 + 87 + 11);while true do if (((239 + 478 + 246)>=(1223 -411)) and (((4 -3) -0)==v238)) then v162=3 -2;break;end if ((431<(702 + 196 + 214)) and (v238==(536 -(61 + 475)))) then v163=0 + 0;v164=nil;v238=1;end end end end else v91[v93[(1678 -(605 + 1069)) -2]]={};end elseif (((3722 + 992)>=(2581 -1344)) and (v94<=(461 -(94 + 358)))) then local v132=0 + 0;local v133;local v134;local v135;while true do if ((v132==(1431 -(897 + 532))) or ((13056 -9887)<=(1610 -(289 + 386)))) then for v230=1188 -(184 + 1003),v93[1988 -(1252 + 732)] do local v231=0;local v232;while true do if ((v231==(1377 -(603 + 774))) or (1412<=((14 + 424) -(119 + 14)))) then v71=v71 + 1;v232=v84[v71];v231=1 -0;end if ((392==392) and (v231==1)) then if (((3882 -(535 + 1310))<4849) and (v232[812 -(558 + 253)]==22)) then v135[v230-(1 + 0)]={v91,v232[3 + 0]};else v135[v230-(1125 -(716 + 408))]={v36,v232[1 + (1988 -(32 + 1954))]};end v90[ #v90 + (1997 -(15 + 1981))]=v135;break;end end end v91[v93[(2528 -(590 + 56)) -(35 + 1845)]]=v29(v133,v134,v37);break;end if (((1644 + 3302)>(9477 -5290)) and ((1171 -(834 + 336))==v132)) then v135={};v134=v10({},{__index=function(v233,v234)local v239=0;local v240;while true do if ((v239==(0 -0)) or ((308 -(104 + 15))>(12320 -(30098 -21396)))) then v240=v135[v234];return v240[1 -0][v240[9 -7]];end end end,__newindex=function(v235,v236,v237)local v241=0 + 0 + 0;local v242;while true do if (((3221 -1553)<(12523 -8390)) and (0==v241)) then v242=v135[v236];v242[1 + 0 + 0][v242[2]]=v237;break;end end end});v132=1998 -(1095 + 901);end if (((1088 + 644)>=(520 + 606)) and (v132==(0 -0))) then local v224=0;while true do if ((v224==1) or ((6942 -2310)<(4853 -3578))) then v132=1 + 0;break;end if ((v224==0) or ((5418 -(8 + 1290))==(724 + 533))) then v133=v86[v93[1068 -(768 + 297)]];v134=nil;v224=1;end end end end elseif ((v94==(10 + 0)) or ((3532 + 1181)<(4852 -(707 + 880)))) then if ((2499==(3301 -(81 + 721))) and (v91[v93[683 -(380 + 301)]]~=v93[1474 -(260 + (3178 -(1883 + 85)))])) then v71=v71 + (2 -1);else v71=v93[3 + 0];end else local v167=(1023 -(598 + 425)) + 0;local v168;local v169;local v170;local v171;while true do if ((4193>=(4504 -2237)) and (v167==2)) then for v253=v168,v72 do local v254=0 + 0;local v255;local v256;while true do if (((2239 + 2234)==(10437 -5964)) and (v254==((0 -0) -0))) then v255=163 -(160 + 3);v256=nil;v254=2 -1;end if ((1634<=(5523 -(558 + (1472 -(1084 + 171))))) and (v254==((1535 -(60 + 1474)) + 0))) then while true do if ((v255==(0 -0)) or ((3601 -(1285 + 168))>=(7346 -(3474 -(76 + 408))))) then v256=0 -0;while true do if ((v256==0) or ((9133 -6088)<(328 + 49))) then v171=v171 + 1;v91[v253]=v169[v171];break;end end break;end end break;end end end break;end if (((2858 + (1731 -919))>=(4480 -(582 + 784))) and (v167==((1378 -(878 + 500)) -0))) then v168=v93[1884 -(1269 + 613)];v169,v170=v88(v91[v168](v13(v91,v168 + ((653 -(507 + 145)) -0),v93[12 -9])));v167=3 -2;end if ((309==(751 -442)) and (v167==(3 -2))) then local v243=1890 -(319 + 1571);while true do if (((4755 -(495 + 413))>=(1421 + 2114)) and ((1 + 0)==v243)) then v167=884 -(821 + 61);break;end if ((((7960 -5980) -(759 + 85 + 1136))==v243) or ((988 + 758)>=(5469 -(1342 + 187)))) then v72=(v170 + v168) -((3 -2) + 0);v171=0 + 0;v243=1 + 0;end end end end end elseif (((1066 + 2371)>2284) and (v94<=(1479 -(322 + 1140)))) then if ((v94<=(40 -26)) or ((3109 + 1125)<(2844 -(785 + 1082)))) then if ((v94<=12) or ((846 + 195)>1326)) then v36[v93[3 + 0]]=v91[v93[2 + 0]];elseif ((1324==(3387 -2063)) and (v94==13)) then if ((2213==2213) and (v91[v93[2]]==v93[4])) then v71=v71 + 1 + 0;else v71=v93[3 + 0];end else local v172=(456 -207) -(177 + 72);local v173;while true do if ((v172==0) or ((109 + 2)>=(937 + 460))) then v173=v93[2 + 0];v91[v173]=v91[v173](v13(v91,v173 + (1615 -(1130 + 484)),v93[7 -4]));break;end end end elseif ((v94<=(13 + 2)) or (((1414 -(1099 + 313)) + 1991)>((27351 -21305) -1186))) then v91[v93[2]]=v29(v86[v93[1 + 2 + (547 -(484 + 63))]],nil,v37);elseif ((v94==(7 + 9)) or ((1790 -1301)==3455)) then if (((184 + 2087)<=(6101 -3355)) and v91[v93[3 -1]]) then v71=v71 + 1 + 0;else v71=v93[9 -6];end elseif ((3635==3635) and  not v91[v93[(3500 -2061) -(1070 + 367)]]) then v71=v71 + (1072 -(590 + 481));else v71=v93[3];end elseif ((v94<=(99 -79)) or ((6211 -4834)<(1254 -730))) then if ((v94<=(14 + 4)) or ((1894 -(345 + 279))>=4152)) then if (((2056 -1617)==(194 + 245)) and (v93[2]==v91[v93[4]])) then v71=v71 + (1685 -(845 + 839));else v71=v93[10 -7];end elseif ((v94==((2427 -(334 + 364)) -(216 + 1494))) or (((29388 -18132) -(8596 -(69 + 198)))==(5483 -(268 + 274)))) then if ((v91[v93[2 + 0]]>v91[v93[748 -(245 + 499)]]) or ((4702 -(24 + 334))<(9637 -(7372 -(243 + 841))))) then v71=v93[4 -1];else v71=v71 + (1 -0);end else local v174=0 + 0;local v175;local v176;local v177;while true do if ((v174==1) or (3643==(1065 -(125 + 772)))) then v177=v91[v175 + 2];if (((984 -628)==356) and (v177>(0 -0))) then if ((v176>v91[v175 + ((332 -(36 + 294)) -1)]) or ((557 + 3084)>=3822)) then v71=v93[3];else v91[v175 + (6 -3)]=v176;end elseif (((155 + (34 -27))<(4440 -(683 + 465))) and (v176<v91[v175 + (1991 -(960 + 1030))])) then v71=v93[(1080 -(435 + 643)) + 1];else v91[v175 + 3]=v176;end break;end if ((2112>=(53 + 65 + 582)) and ((89 -(79 + 2 + 8))==v174)) then local v245=0 -0;while true do if (((827 + 426 + 159)>(1606 -(1123 + (1106 -871)))) and (v245==(0 + 0))) then v175=v93[4 -2];v176=v91[v175];v245=1 -0;end if ((((28451 -18864) -7108)<4341) and (1==v245)) then v174=2 -(1 -0);break;end end end end end elseif ((v94<=(566 -(488 + 56))) or ((905 + 3247)==1615)) then if ((v94>(50 -29)) or ((3166 -(94 + 170))<(3003 -(460 + 200)))) then v91[v93[2 + 0]]=v91[v93[1 + (188 -(147 + 39))]];else local v179=1893 -(1025 + 868);local v180;local v181;local v182;local v183;local v184;local v185;while true do if ((1091<(2408 -(2539 -1243))) and (v179==(326 -(159 + 164)))) then while true do if ((v180==2) or ((11123 -(23005 -14657))==((1389 + 121) -1101))) then for v282=51 -(6 + (1352 -(1157 + 151))),v182 do v91[v183 + v282]=v184[v282];end v185=v184[1 + 0];v180=1497 -(1074 + 420);end if ((748<=(3345 + 128)) and (v180==((2 + 0) -1))) then local v269=0;while true do if ((v269==(1381 -(1348 + 32))) or ((1094 + 91)>=(1443 + 1901))) then v180=(15 + 34) -(38 + 9);break;end if (((0 -0)==v269) or (289>=(154 + 262))) then v183=v181 + 2;v184={v91[v181](v91[v181 + 1 + (0 -0)],v91[v183])};v269=2 -1;end end end if ((v180==(11 -8)) or ((97 + 4050)<=(339 + 1722))) then if (v185 or ((13064 -9292)>=(13229 -8875))) then local v287=0 + 0;local v288;local v289;while true do if ((v287==(1 + 0)) or ((949 + 784)>(3030 + 1444))) then while true do if (((3142 + 627)>(1788 -(71 + 368 + 103))) and (v288==(1841 -(213 + 1628)))) then v289=0 -0;while true do if ((v289==(987 -(115 + 872))) or ((2114 -(165 + 217))>=2855)) then v91[v183]=v185;v71=v93[3];break;end end break;end end break;end if ((v287==0) or ((12322 -(9173 -(230 + 1192)))>(9781 -5192))) then v288=0 -0;v289=nil;v287=1;end end else v71=v71 + (1 -0) + 0;end break;end if ((v180==0) or (((1915 -(1359 + 113)) + 1726)==649)) then local v270=0 -0;while true do if ((v270==(0 + 0)) or (((9558 -5300) -(1057 + 368))>4779)) then v181=v93[1163 -(576 + 585)];v182=v93[4];v270=(2 -1) + 0;end if ((628==((2805 -(420 + 592)) -(1090 + 75))) and (v270==(1 -0))) then v180=1;break;end end end end break;end if ((v179==(632 -(71 + 561))) or ((6431 -(1491 + 451))<2529)) then v180=0 -0;v181=nil;v179=1;end if (((6142 -3305)>(1863 -(104 + 20))) and (v179==2)) then v184=nil;v185=nil;v179=(2166 -(1733 + 142)) -(211 + 77);end if (((799 -(2085 -(1155 + 384)))==(942 -689)) and (v179==(1 -0))) then v182=nil;v183=nil;v179=2;end end end elseif (((5792 -1518)>=(4506 -(347 + (768 -475)))) and (v94>(4 + 19))) then do return;end else local v186=0;local v187;local v188;local v189;while true do if ((777<=((7219 -3200) -878)) and (v186==(0 + (0 -0)))) then v187=0 + 0;v188=nil;v186=1 + 0;end if ((v186==1) or ((4849 -(188 + (580 -237)))<(2078 -875))) then v189=nil;while true do if ((v187==0) or ((5052 -2233)==(5158 -2802))) then local v271=0 -(0 -0);while true do if ((((15721 -10168) -((2158 -831) + 103))==(5035 -(266 + 646))) and (0==v271)) then v188=0;v189=nil;v271=923 -(300 + (1966 -(962 + 382)));end if ((v271==(1438 -(1107 + 330))) or (3190<=(1286 + 535))) then v187=1656 -(1605 + 50);break;end end end if (((3787 -1048)==2739) and ((1 + 0)==v187)) then while true do if (((4042 -(817 + 154))>(1937 + 1067)) and (v188==(0 + (0 -0)))) then v189=v93[2];v91[v189]=v91[v189]();break;end end break;end end break;end end end elseif ((v94<=36) or ((406 + 168)<=(935 -719))) then if (((1071 + 1292)==(4461 -2098)) and (v94<=(23 + 7))) then if (((3843 -(672 + 245))<=(3887 + 276 + 69)) and (v94<=27)) then if ((v94<=(314 -(204 + (412 -327)))) or ((2067 + 90)>(10787 -5794))) then v71=v93[853 -(154 + (1858 -1162))];elseif (((9865 -6759)>3027) and (v94==(3 + 23))) then if ((v91[v93[3 -1]]==v91[v93[4]]) or ((10278 -(23216 -17011))<=(1308 -(108 + 91)))) then v71=v71 + (1451 -(1399 + 51));else v71=v93[3];end else local v190=0 + 0;local v191;local v192;while true do if ((4882>(4519 -3100)) and (v190==(1798 -(974 + 823)))) then for v257=v191 + (2 -1),v93[3 -0] do v8(v192,v91[v257]);end break;end if (((1911 + 2561)>=(1842 + 1872)) and (v190==(0 -0))) then v191=v93[86 -(60 + 24)];v192=v91[v191];v190=1 + 0;end end end elseif ((1708<4813) and (v94<=(11 + 17))) then if ((v91[v93[(2 -1) + 1]]<v91[v93[969 -(920 + 45)]]) or ((6595 -3936)<=(1914 + 38))) then v71=v71 + 1 + 0;else v71=v93[6 -3];end elseif ((v94>(64 -35)) or ((2388 + 752)>=((10490 -(47 + 20)) -6709))) then local v193=(1085 -648) -(286 + 151);local v194;while true do if (((5422 -(973 + 954))<=(4621 -(71 + 347))) and ((938 -(314 + 624))==v193)) then v194=v93[537 -(332 + (616 -413))];v91[v194]=v91[v194](v91[v194 + 1 + 0]);break;end end else v91[v93[1472 -(1290 + 153 + 27)]]= #v91[v93[(3 + 4) -4]];end elseif ((676<(5353 -(641 + 342))) and (v94<=(50 -(34 -17)))) then if (((1450 + 1689)>1919) and (v94<=(1497 -(443 + 1023)))) then local v138=0 + 0;local v139;local v140;while true do if ((v138==((351 + 1204) -(332 + 1222))) or ((1846 + 1112)>(10188 -7210))) then while true do if ((4936>(528 + 1060)) and (v139==0)) then v140=v93[1614 -(1547 + 65)];v91[v140]=v91[v140](v13(v91,v140 + (600 -(454 + 145)),v72));break;end end break;end if ((v138==(1975 -(509 + 1466))) or ((29 + 4423)<=(899 -(12 + 351)))) then v139=0 + 0;v140=nil;v138=1 + 0;end end elseif ((v94==(12 + 20)) or ((1753 + 1061)<=(4921 -2805))) then v91[v93[1 + 1]]();else v91[v93[2]][v93[3 + (307 -(282 + 25))]]=v93[4];end elseif ((v94<=(1898 -((6744 -5006) + 126))) or (2350==3251)) then v91[v93[4 -2]]=v91[v93[2 + 1]] -v93[10 -(3 + 3)];elseif ((v94==35) or ((3787 -(607 + 339))==(93 + 1715))) then local v197=0 -0;local v198;local v199;while true do if ((3933<(10048 -6032)) and (v197==(1 + 0))) then while true do if (((744 + (847 -(91 + 158)))>=(1790 -(342 + 346))) and (v198==(0 -0))) then v199=v93[2 + 0];do return v13(v91,v199,v199 + v93[11 -8]);end break;end end break;end if (((6975 -5550)==(2555 -(423 + 707))) and (v197==(0 + 0))) then v198=0 + 0;v199=nil;v197=647 -(530 + 116);end end else local v200=1548 -(651 + 897);local v201;local v202;local v203;local v204;while true do if (((4016 -(140 + 7))==3869) and (v200==(1 -0))) then v203=nil;v204=nil;v200=1 + 1;end if ((2==v200) or ((3170 + 154)==(4296 -(451 + 664)))) then while true do if (((915 + 193)<(5905 -3006)) and ((1 + 0)==v201)) then v204=nil;while true do if (((2788 -((1254 -(1065 + 131)) + 795))>=212) and (v202==(886 -(813 + 72)))) then for v305=3 -2, #v90 do local v306=918 -(642 + 276);local v307;local v308;while true do if (((744 + 2086 + 915)<=4264) and (v306==(0 -0))) then v307=1496 -(1318 + 178);v308=nil;v306=1 + 0;end if (((1897 -((1856 -(329 + 573)) + 608))<=((6300 -(644 + 754)) -3189)) and (v306==(2 -1))) then while true do if ((298<(3235 -((246 -192) + 792))) and (v307==(0 + 0))) then v308=v90[v305];for v327=0 + 0, #v308 do local v328=925 -(342 + 583);local v329;local v330;local v331;local v332;while true do if ((v328==(3 -2)) or (((4687 -2964) -(117 + 637))>4447)) then v331=nil;v332=nil;v328=1 + 1;end if (((6631 -4897)==(2049 -(159 + 156))) and (v328==(1078 -(908 + 170)))) then local v333=474 -(71 + 184 + 219);while true do if (((3377 -(13 + 859))>647) and (v333==(1 -0))) then v328=1 -0;break;end if ((v333==(0 -(1688 -(1628 + 60)))) or ((4276 + 248 + 98)<(1727 -1257))) then v329=0 + 0;v330=nil;v333=2 -1;end end end if ((1029<(1291 + 1045)) and (v328==(1 + 1))) then while true do if ((v329==(2 -1)) or ((767 + 427)==(244 + 84))) then v332=v330[2 + 0 + 0];if (((v331==v91) and (v332>=v203)) or (((11175 -7941) -(216 + 80))>((34758 -26931) -4529))) then local v339=0 -0;local v340;local v341;while true do if ((v339==(1 -0)) or ((676 -272)>(1545 -832))) then while true do if ((v340==(0 -0)) or (((4293 -(1269 + 725)) -(39 + 6))>=(4335 -(202 + 113)))) then v341=0;while true do if ((v341==(0 -0)) or ((6444 -((2519 -1245) + 216))<=(1210 + 1089))) then v204[v332]=v331[v332];v330[727 -(120 + 606)]=v204;break;end end break;end end break;end if (((16127 -11741)>=((2694 -1830) -(28 + 598))) and (v339==(0 + 0))) then v340=1626 -(1548 + 78);v341=nil;v339=1 + 0;end end end break;end if ((v329==(259 -(254 + 5))) or ((4276 -1509)<(76 + 1532))) then local v336=0 -0;while true do if ((v336==(1982 -(1362 + 620))) or ((3055 + 1781)<=(5703 -(536 + 1035)))) then local v342=0 -0;while true do if (((2999 + 1437)>=(4132 -(1071 + (1990 -(546 + 541))))) and (v342==1)) then v336=1;break;end if ((v342==(0 + 0)) or ((156 + 1781)<(1854 -(136 + 254)))) then v330=v308[v327];v331=v330[2 -1];v342=1;end end end if ((4356>=(1492 -(800 + 597))) and (v336==(1587 -(459 + 1127)))) then v329=1 + 0;break;end end end end break;end end end break;end end break;end end end break;end if (((1383 + 769)<=(1290 + 1476)) and (v202==(1889 -(1513 + 376)))) then local v299=0 + 0;local v300;while true do if ((2701<3070) and (v299==(0 -0))) then v300=(961 -(556 + 405)) + (338 -(56 + 282));while true do if (((6246 -1796)>=(1012 -(97 + (385 -(132 + 222))))) and (v300==0)) then local v323=0 + 0;while true do if (((1 -0)==v323) or ((6364 -(294 + 1544))<(1146 -539))) then v300=1695 -(669 + 1025);break;end if ((3609>(1886 -(89 + 19))) and (v323==0)) then v203=v93[1 + (1 -0)];v204={};v323=(1599 -(1254 + 343)) -1;end end end if ((667<=((2121 + 3191) -(324 + 50))) and (v300==(1 + (0 -0)))) then v202=1;break;end end break;end end end end break;end if (((468 + 1170)==(2383 -745)) and ((286 -(156 + 130))==v201)) then local v272=0 -0;while true do if ((v272==(1101 -(366 + 734))) or ((8830 -5339)<=(105 + 230))) then v201=1 + 0;break;end if (((3821 -(1157 + 816))<4112) and (v272==(1190 -(1139 + 51)))) then v202=0 -(0 + 0);v203=nil;v272=1;end end end end break;end if ((v200==(0 + 0)) or ((5347 -(392 + 388))<(2384 -(478 + 360)))) then v201=1825 -(702 + 1123);v202=nil;v200=2 -1;end end end elseif (((5480 -(1650 + 148))>(5702 -4558)) and (v94<=(101 -59))) then if ((v94<=(55 -16)) or ((5998 -3816)<1531)) then if ((((2566 -1751) + 653)>1245) and (v94<=(31 + 6))) then v91[v93[2]]=v91[v93[(4 -2) + 1]] * v93[4];elseif (((4396 -(46 + 407))>(9212 -6783)) and (v94==38)) then local v205=0 -0;local v206;local v207;local v208;local v209;while true do if ((((3723 -1903) -(567 + 318))<((1901 + 2349) -(105 + 216))) and (v205==(2 + 0))) then while true do if ((v206==(0 -0)) or ((3618 -(595 + 341))>=(1370 + 2259))) then local v273=0 + 0;local v274;while true do if ((v273==(0 + (744 -(572 + 172)))) or ((513 + (1194 -628))<(1232 -(123 + 292)))) then v274=0;while true do if ((v274==(0 -0)) or ((5379 -(658 + 110))<=(3485 -(510 + 777)))) then local v315=0;while true do if (((1954 + (2317 -625))>(643 + 1164)) and (v315==(0 -0))) then v207=v93[4 -2];v208=v91[v207];v315=1 + 0;end if (((424 + (802 -(519 + 121)))<(12196 -7978)) and (v315==(1 + 0))) then v274=293 -(12 + 280);break;end end end if ((v274==(3 -2)) or ((1679 + 1755)<(4785 -(253 + 1452)))) then v206=1;break;end end break;end end end if ((v206==1) or (2430==(1492 + 524))) then v209=v93[3 + 0];for v284=1 + (0 -0),v209 do v208[v284]=v91[v207 + v284];end break;end end break;end if (((2 -1)==v205) or ((741 + 1439)>(2257 + 2272))) then local v247=0 + 0;while true do if (((4200 -3062)==1138) and ((2 -1)==v247)) then v205=2;break;end if ((v247==(0 -0)) or ((783 + 1324)>=(12391 -8009))) then v208=nil;v209=nil;v247=1;end end end if (((603 -(78 + 140))<(2658 -(652 + 593 + 96))) and (v205==(1154 -((482 -130) + 802)))) then v206=0;v207=nil;v205=1;end end else local v210=320 -(15 + (1506 -(632 + 569)));local v211;local v212;local v213;while true do if ((v210==1) or (378>4918)) then v213=0 + 0;for v259=v211,v93[6 -2] do local v260=(0 -0) -0;while true do if ((v260==0) or ((4467 -(108 + 282))<(859 + 1164))) then v213=v213 + (1530 -(939 + 590));v91[v259]=v212[v213];break;end end end break;end if (((6661 -3302)>(511 -194)) and (v210==0)) then local v248=0;while true do if (((506 + 1163)<=4020) and (v248==(1 + 0))) then v210=907 -(661 + 245);break;end if ((v248==(280 -(254 + 26))) or ((3194 -(77 + (2750 -1413)))>=(8925 -(2085 + 4040)))) then v211=v93[1186 -(507 + (2055 -(896 + 482)))];v212={v91[v211](v91[v211 + 1])};v248=1 -0;end end end end end elseif ((((14152 -(9 + 27)) -9185)>((1208 -438) + 435)) and (v94<=(33 + 7))) then v91[v93[697 -(689 + 6)]]=v93[1892 -(417 + 1472)];elseif ((((192 -118) -59)<(8455 -4779)) and (v94==(32 + 9))) then for v225=v93[1 + 1],v93[1 + 2] do v91[v225]=nil;end else v91[v93[1340 -(836 + 502)]]=v91[v93[2 + 1]][v93[(18 -6) -8]];end elseif (((16507 -12309)<=(917 + 3618)) and (v94<=(169 -124))) then if (((1823 + 2924)>=556) and (v94<=((44 + 8) -9))) then local v144=899 -(38 + 861);local v145;local v146;while true do if (((0 -0)==v144) or (4900<(5454 -2779))) then local v227=(152 + 463) -(97 + 518);while true do if ((v227==(134 -(57 + 33 + 10 + 34))) or ((2369 + 1393)>(6202 -(509 + 1031)))) then v145=v93[2 + 0];v146=v91[v93[757 -((1240 -520) + 10 + 24)]];v227=881 -(705 + 175);end if (((419 + 2250)>(2304 -(143 + 243 + 241))) and (v227==(1704 -(597 + 1106)))) then v144=1 + 0;break;end end end if ((3192>=((117 -62) -(1796 -(275 + 1503)))) and (v144==((3075 -1691) -(607 + 776)))) then v91[v145 + 1]=v146;v91[v145]=v146[v93[1161 -(1069 + 88)]];break;end end elseif (((2128 -(987 + 776))==(1124 -(189 + 570))) and (v94==((1112 + 893) -((1952 -(260 + 1398)) + 1667)))) then v91[v93[1058 -(645 + 411)]]=v36[v93[1 + 2]];else v91[v93[6 -4]]=v91[v93[1352 -(150 + 192 + 1007)]] -v91[v93[2 + 2]];end elseif ((v94<=(7 + 40)) or ((690 + (3013 -581))<=1853)) then if (((625 + 1455)<=3481) and (v94>(31 + 15))) then v91[v93[2]]=v37[v93[1993 -(1295 + 695)]];elseif ((v93[2 + 0]<=v91[v93[10 -6]]) or ((1189 + 603)<(1229 -(199 + 171)))) then v71=v71 + 1;else v71=v93[608 -(173 + 432)];end elseif (((3061 -(128 + 82))>=1951) and (v94>((26 -12) + 34))) then do return v91[v93[2 + 0]];end else local v218=(2123 -909) -(1044 + 170);local v219;local v220;local v221;local v222;while true do if ((v218==(241 -(207 + 33))) or ((5430 -3137)==3886)) then v221=nil;v222=nil;v218=(3 -1) + 0;end if (((4097 -(278 + 315))>=(1371 + 174)) and (v218==(626 -((1720 -(209 + 1493)) + (2165 -1557))))) then v219=0 + 0 + 0;v220=nil;v218=1 + 0;end if (((5266 -((432 -210) + 92))>(159 + (703 -(174 + 320)))) and (v218==(1524 -(276 + 1246)))) then while true do if ((v219==(691 -(403 + 287))) or ((1108 -((1693 -1147) + 365))==1281)) then local v275=1270 -((648 -(31 + 53)) + 706);while true do if (((4270 -3013)<(4432 + 140)) and ((0 -0)==v275)) then v222=v91[v220] + v221;v91[v220]=v222;v275=1 + 0;end if (((1298 -(68 + (1252 -(379 + 731))))<=(3576 -(593 + 1181))) and (1==v275)) then v219=7 -5;break;end end end if (((3056 -1668)==1388) and (v219==(0 + 0))) then local v276=(230 + 364) -(512 + 82);while true do if (((2564 -1596)<=1657) and (v276==(1 -0))) then v219=107 -(91 + 12 + 3);break;end if ((0==v276) or ((132 + 465)>=(3895 + (1330 -(127 + 545))))) then v220=v93[2];v221=v91[v220 + (2 -0)];v276=2 -1;end end end if ((v219==(3 -1)) or ((2269 + 1509)==(3046 -(1758 -592)))) then if (((1922 -(238 + 73))<=2761) and (v221>0)) then if ((v222<=v91[v220 + 1 + 0]) or ((7162 -5155)>(4750 -(1442 + 531)))) then local v309=0 -0;while true do if ((((0 -0) -0)==v309) or (((2832 -(522 + 341)) + 108)>=((6356 -1854) -(17 + 50 + 360)))) then v71=v93[1 + 2];v91[v220 + 3]=v222;break;end end end elseif (((2586 -(1219 + 186))>=746) and (v222>=v91[v220 + ((935 -(253 + 680)) -(2 -1))])) then local v310=0 + 0;local v311;while true do if ((v310==(0 + 0)) or ((102 + 50 + 233)>=(972 -(32 + 294)))) then v311=0 -0;while true do if (((3917 + 738)<=(4602 + 303)) and (v311==(0 -0))) then v71=v93[13 -10];v91[v220 + (13 -10)]=v222;break;end end break;end end end break;end end break;end end end v71=v71 + (1 -0);break;end end end end v70=3;end end end;end return v29(v28(),{},v17)();end v0=4;end if (v0==2) then v9=getfenv or function()return _ENV;end;v10=setmetatable;v11=pcall;v12=select;v0=3;end if (v0==4) then vv9());break;end end end
